openapi: 3.0.0

info:
  description: Web service to authentication (Oauth 2) - OBT
  version: "0.2.0"
  title: API Oauth2
  contact:
    name: OBT-INPE
    email: brazildatacube@dpi.inpe.br
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
    
servers:
  - url: 'https://oauth.dpi.inpe.br/api'
    description: Production server

tags:
  - name: "status"
    description: "Status services"
  - name: "users"
    description: "Users manager"
  - name: "clients"
    description: "Clients/Apps manager"
  - name: "auth"
    description: "Authentication"

paths:
  /oauth/status/:
    get:
      tags:
        - "status"
      summary: "Status application"
      description: "return status of application"
      responses:
        200:
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string

  /oauth/users/:
    get:
      tags:
        - "users"
      summary: "Users"
      description: "Returns a list of active users"
      responses:
        200:
          description: "Array of users"
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: array
                    items:
                      $ref: "#/response/schemas/User"
    post:
      tags:
        - "users"
      summary: "Create User"
      description: "Create new user"
      requestBody:
        description: "Initial informations to create user"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/request/schemas/UserFull"
      responses:
        201:
          description: "Information of new user"
          content:
            application/json:
              schema:
                $ref: "#/response/schemas/User"

  /oauth/users/{id}:
    get:
      tags:
        - "users"
      summary: "User by ID"
      description: "Returns information of user by ID"
      parameters:
        - in: "path"
          name: "id"
          required: true
          description: "User ID"
      responses:
        200:
          description: "User informations"
          content:
              application/json:
                schema:
                  $ref: "#/response/schemas/User"
    put:
      tags:
        - "users"
      summary: "Update User"
      description: "Update informations of user"
      parameters:
        - in: "path"
          name: "id"
          required: true
          description: "User ID"
      requestBody:
        description: "new informations to update user"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/request/schemas/User"
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
    delete:
      tags:
        - "users"
      summary: "Delete User"
      description: "Deleting a user"
      parameters:
        - in: "path"
          name: "id"
          required: true
          description: "User ID"
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string

  /oauth/users/change-password/{id}:
    put:
      tags:
        - "users"
      summary: "Change Password"
      description: "Change user password"
      parameters:
        - in: "path"
          name: "id"
          required: true
          description: "User ID"
      requestBody:
        description: "User password"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/request/schemas/UserPassword"
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string

  /oauth/users/send-password:
    post:
      tags:
        - "users"
      summary: "Send Password"
      description: "Send email to recover password"
      requestBody:
        description: "User password"
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                properties:
                  email:
                    type: string
                  message:
                    type: string

  /oauth/users/valid-token-password/{token}:
    post:
      tags:
        - "users"
      summary: "Valid token/password"
      description: "Valid token used to change password"
      parameters:
        - in: "path"
          name: "token"
          required: true
          description: "Token used to change password"
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string

  /oauth/users/reset-password:
    put:
      tags:
        - "users"
      summary: "Reset Password"
      description: "Change password with token sent by email"
      requestBody:
        description: "User password with Token"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/request/schemas/UserPasswordReset"
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /oauth/users/client/{id}:
    get:
      tags:
        - "users"
      summary: "List users by Clients/Apps"
      description: "List users authorized (with scope) by app/client"
      parameters:
        - in: "path"
          name: "id"
          required: true
          description: "Client ID"
      responses:
        200:
          description: Users informations
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: array
                    items:
                      $ref: "#/response/schemas/User"

  /oauth/clients/:
    get:
      tags:
        - "clients"
      summary: "Clients"
      description: "Returns a list of active clients"
      responses:
        200:
          description: "Array of clients"
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: array
                    items:
                      $ref: "#/response/schemas/Client"
    post:
      tags:
        - "clients"
      summary: "Create Client"
      description: "Create new client"
      requestBody:
        description: "Initial informations to create client"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/request/schemas/ClientFull"
      responses:
        201:
          description: "Information of new client"
          content:
            application/json:
              schema:
                $ref: "#/response/schemas/Client"

  /oauth/clients/{id}:
    get:
      tags:
        - "clients"
      summary: "Client by ID"
      description: "Returns information of client by ID"
      parameters:
        - in: "path"
          name: "id"
          required: true
          description: "Client ID"
      responses:
        200:
          description: "Client informations"
          content:
              application/json:
                schema:
                  $ref: "#/response/schemas/Client"
    put:
      tags:
        - "clients"
      summary: "Update Client"
      description: "Update informations of client"
      parameters:
        - in: "path"
          name: "id"
          required: true
          description: "Client ID"
      requestBody:
        description: "new informations to update client"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/request/schemas/Client"
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
    delete:
      tags:
        - "clients"
      summary: "Delete Client"
      description: "Deleting a client"
      parameters:
        - in: "path"
          name: "id"
          required: true
          description: "Client ID"
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string

  /oauth/clients/{id}/status/enable:
    put:
      tags:
        - "clients"
      summary: "Enable Client"
      description: "Enable client or extend expiration date"
      parameters:
        - in: "path"
          name: "id"
          required: true
          description: "Client ID"
      requestBody:
        description: "Date of expiration. If not has date set with null"
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                expired_at:
                  type: datetime
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string

  /oauth/clients/{id}/status/disable:
    put:
      tags:
        - "clients"
      summary: "Disable Client"
      description: "Disable client"
      parameters:
        - in: "path"
          name: "id"
          required: true
          description: "Client ID"
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string

  /oauth/clients/users/{user_id}:
    get:
      tags:
        - "clients"
      summary: "List Client By UserId"
      description: "List clients by a user (if the user is an admin of the app)"
      parameters:
        - in: "path"
          name: "user_id"
          required: true
          description: "User ID"
      responses:
        200:
          description: Clients informations
          content:
            application/json:
              schema:
                  type: object
                  properties:
                    clients:
                      type: array
                      items:
                        $ref: "#/response/schemas/Client"
  
  /oauth/clients/<client_id>/author/<user_id>:
    get:
      tags:
        - "clients"
      summary: "Add new author"
      description: "Add new author in client/application"
      parameters:
        - in: "path"
          name: "client_id"
          required: true
          description: "Client ID"
        - in: "path"
          name: "user_id"
          required: true
          description: "User ID"
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
  
    delete:
      tags:
        - "clients"
      summary: "Delete author"
      description: "Delete author in client/application"
      parameters:
        - in: "path"
          name: "client_id"
          required: true
          description: "Client ID"
        - in: "path"
          name: "user_id"
          required: true
          description: "User ID"
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string

  /oauth/auth/login:
    post:
      tags:
        - "auth"
      summary: "Login"
      description: "Authentication and generate token of user"
      requestBody:
        description: "crendetials of user"
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        200:
          description: "User Token"
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_id:
                    type: string
                  grants:
                    type: array
                    items:
                      type: string
                  access_token:
                    type: string
                  expired_date:
                    type: string

  /oauth/auth/token:
    get:
      tags:
        - "auth"
      summary: "Token"
      description: "Authentication and generate token of client"
      parameters:
        - in: query
          name: service
          type: string
          description: "client/app name or service name"
        - in: query
          name: scope
          type: string
      responses:
        200:
          description: "Client Token"
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_id:
                    type: string
                  callback:
                    type: string
                  token:
                    type: string
                  access_token:
                    type: string
                  expired_date:
                    type: string

  /oauth/auth/authorize/{user_id}/{client_id}:
    post:
      tags:
        - "auth"
      summary: "Authorize client"
      description: "authorize a client application for a user"
      parameters:
        - in: "path"
          name: "user_id"
          required: true
          description: "User ID"
        - in: "path"
          name: "client_id"
          required: true
          description: "Client ID"
      requestBody:
        description: "scopes"
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                scope:
                  type: array
                  items:
                    type: string
      responses:
        200:
          description: "execution status"
          content:
            application/json:
              schema:
                type: string

  /oauth/auth/revoke/{user_id}/{client_id}:
    post:
      tags:
        - "auth"
      summary: "Revoke client"
      description: "revoke a client application for a user"
      parameters:
        - in: "path"
          name: "user_id"
          required: true
          description: "User ID"
        - in: "path"
          name: "client_id"
          required: true
          description: "Client ID"
      requestBody:
        description: "scopes"
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                scope:
                  type: array
                  items:
                    type: string
      responses:
        200:
          description: "execution status"
          content:
            application/json:
              schema:
                type: string

request:
  schemas:
    UserFull:
      type: object
      properties:
        name:
          type: string
          required: true
        email:
          type: integer
          required: true
        institution:
          type: string
        occupation:
          type: string
        admin:
          type: boolean
        password:
          type: string
          required: true
        confirm_password:
          type: string
          required: true
    User:
      type: object
      properties:
        institution:
          type: string
        occupation:
          type: string
    UserPassword:
      type: object
      properties:
        old_password:
          type: string
          required: true
        password:
          type: string
          required: true
        confirm_password:
          type: string
          required: true
    UserPasswordReset:
      type: object
      properties:
        token:
          type: string
          required: true
        password:
          type: string
          required: true
        confirm_password:
          type: string
          required: true
    ClientFull:
      type: object
      properties:
        client_name:
          type: string
          required: true
        client_uri:
          type: string
          required: true
        client_secret:
          type: string
          required: true
        type_secret:
          type: string
          description: string or file
          required: true
        redirect_uri:
          type: string
          required: true
        expired_at:
          type: datetime
    Client:
      type: object
      properties:
        client_name:
          type: string
          required: true
        client_uri:
          type: string
          required: true
        redirect_uri:
          type: string
          required: true

response:
  schemas:
    User:
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
        email:
          type: integer
        institution:
          type: string
        occupation:
          type: string
        created_at:
          type: datetime
        clients_authorized:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              scope:
                type: array
                items:
                  type: string
        credentials:
          type: object
          properties:
            username:
              type: string
            grants:
              type: array
              items:
                type: string
    Client:
      type: object
      properties:
        _id:
          type: string
        user_id:
          type: array
          items:
            type: string
        client_name:
          type: string
        client_secret:
          type: string
        type_secret:
          ype: string
        client_uri:
          type: string
        redirect_uri:
          type: string
        created_at:
          type: datetime
        expired_at:
          type: datetime
